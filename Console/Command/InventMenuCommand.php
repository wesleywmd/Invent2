<?php
namespace Wesleywmd\Invent\Console\Command;

use Magento\Setup\Console\Style\MagentoStyleFactory;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Wesleywmd\Invent\Api\ComponentInterface;
use Wesleywmd\Invent\Api\DataInterface;
use Wesleywmd\Invent\Console\InventStyle;
use Wesleywmd\Invent\Console\InventStyleFactory;
use Wesleywmd\Invent\Helper\AclHelper;
use Wesleywmd\Invent\Model\Acl;
use Wesleywmd\Invent\Model\Menu;
use Wesleywmd\Invent\Model\Module\ModuleNameValidator;
use Wesleywmd\Invent\Model\ModuleNameFactory;

class InventMenuCommand extends InventCommandAcl
{
    private $menuDataFactory;
    
    private $acl;
    
    private $aclDataFactory;

    public function __construct(
        ComponentInterface $component,
        ModuleNameFactory $moduleNameFactory,
        InventStyleFactory $inventStyleFactory,
        ModuleNameValidator $moduleNameValidator,
        AclHelper $aclHelper,
        Acl\AclNameValidator $aclNameValidator,
        Menu\DataFactory $menuDataFactory,
        ComponentInterface $acl,
        Acl\DataFactory $aclDataFactory
    ) {
        parent::__construct($component, $moduleNameFactory, $inventStyleFactory, $moduleNameValidator, $aclHelper, $aclNameValidator);
        $this->menuDataFactory = $menuDataFactory;
        $this->acl = $acl;
        $this->aclDataFactory = $aclDataFactory;
    }

    protected function configure()
    {
        $this->setName('invent:menu')
            ->setDescription('Create Admin Menu Item')
            ->addArgument('moduleName', InputArgument::REQUIRED, 'Module Name')
            ->addArgument('menuName', InputArgument::REQUIRED, 'Menu Name')
            ->addOption('parent', null, InputOption::VALUE_REQUIRED, 'Parent Menu Name', null)
            ->addOption('title', null, InputOption::VALUE_REQUIRED, 'Menu Title', null)
            ->addOption('sortOrder', null, InputOption::VALUE_REQUIRED, 'Menu Sort Order', 10)
            ->addOption('action', null, InputOption::VALUE_REQUIRED, 'Menu Action', null)
            ->addOption('resource', null, InputOption::VALUE_REQUIRED, 'ACL Resource', null);
    }

    protected function interact(InputInterface $input, OutputInterface $output)
    {
        parent::interact($input, $output); // TODO: Change the autogenerated stub
    }

    protected function getData(InputInterface $input)
    {
        return $this->menuDataFactory->create([
            'moduleName' => $this->moduleNameFactory->create($input->getArgument('moduleName')),
            'menuName' => $input->getArgument('menuName'),
            'parentMenu' => $input->getOption('parent'),
            'title' => $input->getOption('title'),
            'sortOrder' => $input->getOption('sortOrder'),
            'action' => $input->getOption('action'),
            'resource' => $input->getOption('resource')
        ]);
    }

    protected function afterAddToModule(InventStyle $io, DataInterface $data)
    {
        if ($this->aclHelper->findInTree($data->getResource())) {
            return;
        }
        
        $aclName = explode('::', $data->getResource());
        $aclData = $this->aclDataFactory->create([
            'moduleName' => $data->getModuleName(),
            'aclName' => $aclName[1],
            'parentAcl' => $data->getParentMenu(),
            'title' => $data->getTitle(),
            'sortOrder' => $data->getSortOrder()
        ]);
        $this->acl->addToModule($aclData);
    }
}